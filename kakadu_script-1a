#!/bin/bash
# ---------- Kakadu Script ----------
# This script is used to repeat the kakadu compress command with
# different rates. At the moment the script covers the rates between
# 0.05 to 2. It also uses three different parameters resulting in
# 120 images and 120 text files.
#
# Instructions:
# 1. Create a new directory for binary executables (this is for ubuntu).
#   $ mkdir ~/bin
#
# 2. copy this file into the bin directory
#
# 3. Change the permissions of the binary file to allow execution.
#   $ chmod 755 ~/bin/kakadu_script-1
#
# 3. Logout from the system
#   $ logout
#
# 4. Create the following directory tree
#   lab1            (main directory)
#	|   n5_RGB.ppm  (main image to compress)
#   |---img         (subdirectory for resulting images)
#   |---logs        (subdirectory for resulting logs)
#
# 5. Navigate to the lab1 directory
#	$ cd /path_to_directory/lab1	(depends on the user)
#
# 6. Execute the binary and enjoy
#	$ kakadu_script-1
#
# TO DO: ask the user the value in which to perform the steps.
#
#	---------- License ---------- 
#	This program is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Define the parameters
step="0.05"
range_min=0
range_max=2

# Calculate de number of samples
samples=$(echo "scale=2; ($range_max-$range_min)/$step;"|bc);

# Create the csv (comma separated values) file
echo 'Rate,PSNR' > results.csv

echo 'No Tiling' >> results.csv
# Loop to compress, compare and erase for No Tiling.
for i in `seq 1 $samples`;
do
  # Compression
  rate=$(echo "scale=2; $i*$step+$range_min;"|bc);
  kdu_compress -i ./n5_RGB.ppm -o ./img/img-no_tiling-$i.jp2 \
    -record ./logs/comp-no_tiling-$i.txt -rate $rate

  # Decompression
  kdu_expand -i ./img/img-no_tiling-$i.jp2 -o ./img/img-no_tiling-$i.ppm \
    -record ./logs/decomp-no_tiling-$i.txt

  # Comparison
  psnr=$(Gcomp -i1 ./n5_RGB.ppm -i2 ./img/img-no_tiling-$i.ppm -m 7 -f 1)

  # Saving the values in the csv file
  echo $rate','$psnr >> results.csv

  # Delete the images (cleaning), comment if you want to keep the images
  rm ./img/img-no_tiling-$i.jp2
  rm ./img/img-no_tiling-$i.ppm
done

echo 'Tiles of 128' >> results.csv
# Loop to compress, compare and erase for No Tiling.
for i in `seq 1 $samples`;
do
  # Compression
  rate=$(echo "scale=2; $i*$step+$range_min;"|bc);
  kdu_compress -i ./n5_RGB.ppm -o ./img/img-128_tiling-$i.jp2 \
    -record ./logs/comp-128_tiling-$i.txt -rate $rate "Stiles={128,128}"

  # Decompression
  kdu_expand -i ./img/img-128_tiling-$i.jp2 -o ./img/img-128_tiling-$i.ppm \
    -record ./logs/decomp-128_tiling-$i.txt

  # Comparison
  psnr=$(Gcomp -i1 ./n5_RGB.ppm -i2 ./img/img-128_tiling-$i.ppm -m 7 -f 1)

  # Saving the values in the csv file
  echo $rate','$psnr >> results.csv

  # Delete the images (cleaning), comment if you want to keep the images
  rm ./img/img-128_tiling-$i.jp2
  rm ./img/img-128_tiling-$i.ppm
done

echo 'Tiles of 64' >> results.csv
# Loop to compress, compare and erase for No Tiling.
for i in `seq 1 $samples`;
do
  # Compression
  rate=$(echo "scale=2; $i*$step+$range_min;"|bc);
  kdu_compress -i ./n5_RGB.ppm -o ./img/img-64_tiling-$i.jp2 \
    -record ./logs/comp-64_tiling-$i.txt -rate $rate "Stiles={64,64}"

  # Decompression
  kdu_expand -i ./img/img-64_tiling-$i.jp2 -o ./img/img-64_tiling-$i.ppm \
    -record ./logs/decomp-64_tiling-$i.txt

  # Comparison
  psnr=$(Gcomp -i1 ./n5_RGB.ppm -i2 ./img/img-64_tiling-$i.ppm -m 7 -f 1)

  # Saving the values in the csv file
  echo $rate','$psnr >> results.csv

  # Delete the images (cleaning), comment if you want to keep the images
  rm ./img/img-64_tiling-$i.jp2
  rm ./img/img-64_tiling-$i.ppm
done

echo "*************************"
echo "* Done! Script complete *"
echo "*************************"
